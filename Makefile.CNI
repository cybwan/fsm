#!make

SHELL = bash

CC = gcc
CLANG = clang

BASE_DIR = $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
INC_DIR = $(abspath ${BASE_DIR})/bpf/include
SRC_DIR = $(abspath ${BASE_DIR})/bpf/src
BIN_DIR = $(abspath ${BASE_DIR})/bin
BPF_DIR = $(abspath ${BASE_DIR})/bpf

MESH_KERN_OUT = mesh.kern.o
MESH_KERN_SRC = $(patsubst %.o,%.c,${MESH_KERN_OUT})

BPF_CFLAGS = \
	-O2 \
	-D__KERNEL__ \
	-Wno-unused-value     \
	-Wno-pointer-sign     \
	-Wno-compare-distinct-pointer-types

CGO_CFLAGS_DYN = "-I. -I./bpf/include -I/usr/include/"
CGO_LDFLAGS_DYN = "-lelf -lz -lbpf"

.default: build

.PHONY: build
build: bpf

.PHONY: bpf-fmt
bpf-fmt:
	find . -regex '.*\.\(c\|h\)' -exec clang-format -style=file -i {} \;

.PHONY: bpf-build
bpf-build: ${BIN_DIR}/${MESH_KERN_OUT}

${BIN_DIR}/${MESH_KERN_OUT}: ${SRC_DIR}/${MESH_KERN_SRC}
	clang -I${INC_DIR} ${BPF_CFLAGS} -emit-llvm -c -g $< -o - | llc -march=bpf -filetype=obj -o $@

.PHONY: bpf-clean
bpf-clean:
	rm -f ${BIN_DIR}/${MESH_KERN_OUT}

.PHONY: bpf
bpf: bpf-clean bpf-build
